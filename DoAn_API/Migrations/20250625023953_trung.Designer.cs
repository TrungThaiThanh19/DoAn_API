// <auto-generated />
using System;
using DoAn_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn_API.Migrations
{
    [DbContext(typeof(DoAnDbContext))]
    [Migration("20250625023953_trung")]
    partial class trung
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn_API.Data.ChiTietPhieuNhap", b =>
                {
                    b.Property<Guid>("ID_CTPN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_PN")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuongNhap")
                        .HasColumnType("int");

                    b.HasKey("ID_CTPN");

                    b.HasIndex("ID_PN");

                    b.HasIndex("ID_SP");

                    b.ToTable("CTPhieuNhaps");
                });

            modelBuilder.Entity("DoAn_API.Data.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("ID_CTSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_MS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SIZE")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_TH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_CTSP");

                    b.HasIndex("ID_MS");

                    b.HasIndex("ID_SIZE");

                    b.HasIndex("ID_SP");

                    b.HasIndex("ID_TH");

                    b.ToTable("CTSanPhams");
                });

            modelBuilder.Entity("DoAn_API.Data.MauSac", b =>
                {
                    b.Property<Guid>("ID_MS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_MS");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("DoAn_API.Data.Size", b =>
                {
                    b.Property<Guid>("ID_SIZE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_SIZE");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("DoAn_API.Data.TaiKhoan", b =>
                {
                    b.Property<Guid>("ID_TK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TK");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Property<Guid>("ID_HD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_KH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_NV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_VCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_HD");

                    b.HasIndex("ID_KH");

                    b.HasIndex("ID_NV");

                    b.HasIndex("ID_VCH");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("ID_HDCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_HD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_HDCT");

                    b.HasIndex("ID_HD");

                    b.HasIndex("ID_SP");

                    b.ToTable("CTHoaDons");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.Property<Guid>("ID_KH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhach")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_KH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("NhanVien", b =>
                {
                    b.Property<Guid>("ID_NV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("ID_TK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoCccd")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TenNV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_NV");

                    b.HasIndex("ID_TK");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("PhieuNhap", b =>
                {
                    b.Property<Guid>("ID_PN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_NV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_PN");

                    b.HasIndex("ID_NV");

                    b.ToTable("PhieuNhaps");
                });

            modelBuilder.Entity("SanPham", b =>
                {
                    b.Property<Guid>("ID_SP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_SP");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("ThuongHieu", b =>
                {
                    b.Property<Guid>("ID_TH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTH")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TH");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("Voucher", b =>
                {
                    b.Property<Guid>("ID_VCH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenVch")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_VCH");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DoAn_API.Data.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("PhieuNhap", "PhieuNhap")
                        .WithMany("CTPhieuNhaps")
                        .HasForeignKey("ID_PN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany("CTPhieuNhaps")
                        .HasForeignKey("ID_SP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhieuNhap");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DoAn_API.Data.ChiTietSanPham", b =>
                {
                    b.HasOne("DoAn_API.Data.MauSac", "MauSac")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("ID_MS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn_API.Data.Size", "Size")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("ID_SIZE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("ID_SP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThuongHieu", "ThuongHieu")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("ID_TH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_KH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_NV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_VCH")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("HoaDonChiTiet", b =>
                {
                    b.HasOne("HoaDon", "HoaDon")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("ID_HD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("ID_SP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("NhanVien", b =>
                {
                    b.HasOne("DoAn_API.Data.TaiKhoan", "TaiKhoan")
                        .WithMany("NhanViens")
                        .HasForeignKey("ID_TK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("PhieuNhap", b =>
                {
                    b.HasOne("NhanVien", "NhanVien")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("ID_NV")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DoAn_API.Data.MauSac", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("DoAn_API.Data.Size", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("DoAn_API.Data.TaiKhoan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Navigation("CTHoaDons");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("PhieuNhap", b =>
                {
                    b.Navigation("CTPhieuNhaps");
                });

            modelBuilder.Entity("SanPham", b =>
                {
                    b.Navigation("CTHoaDons");

                    b.Navigation("CTPhieuNhaps");

                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("ThuongHieu", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
