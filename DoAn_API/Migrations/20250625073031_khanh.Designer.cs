// <auto-generated />
using System;
using DoAn_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn_API.Migrations
{
    [DbContext(typeof(DoAnDbContext))]
    [Migration("20250625073031_khanh")]
    partial class khanh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn_API.Data.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("ID_CTSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThuTich")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.HasKey("ID_CTSP");

                    b.HasIndex("ID_SP");

                    b.HasIndex("ID_ThuTich");

                    b.ToTable("CTSanPhams");
                });

            modelBuilder.Entity("DoAn_API.Data.DiaChi", b =>
                {
                    b.Property<Guid>("ID_DiaChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_NguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_DiaChi");

                    b.HasIndex("ID_NguoiDung");

                    b.ToTable("DiaChis");
                });

            modelBuilder.Entity("DoAn_API.Data.GioHang", b =>
                {
                    b.Property<Guid>("ID_GioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_GioHang");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("DoAn_API.Data.PhuongThucVanChuyen", b =>
                {
                    b.Property<Guid>("ID_VanChuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenPT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_VanChuyen");

                    b.ToTable("PhuongThucVanChuyens");
                });

            modelBuilder.Entity("DoAn_API.Data.TaiKhoan", b =>
                {
                    b.Property<Guid>("ID_TK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TK");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("DoAn_API.Data.TheTich", b =>
                {
                    b.Property<Guid>("ID_TheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTheTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_TheTich");

                    b.ToTable("TheTichs");
                });

            modelBuilder.Entity("GioHangCT", b =>
                {
                    b.Property<Guid>("ID_GioHangCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_GioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_GioHangCT");

                    b.HasIndex("ID_GioHang");

                    b.HasIndex("ID_SPCT");

                    b.ToTable("GioHangCTs");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Property<Guid>("ID_HD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_DiaChi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_NguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_VCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_VanChuyen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_HD");

                    b.HasIndex("ID_DiaChi");

                    b.HasIndex("ID_NguoiDung");

                    b.HasIndex("ID_ThanhToan");

                    b.HasIndex("ID_VCH");

                    b.HasIndex("ID_VanChuyen");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("ID_HDCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_CTSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_HD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_HDCT");

                    b.HasIndex("ID_CTSP");

                    b.HasIndex("ID_HD");

                    b.ToTable("CTHoaDons");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.Property<Guid>("ID_NguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_TK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_NguoiDung");

                    b.HasIndex("ID_TK");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("PhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("ID_ThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenPT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_ThanhToan");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("SanPham", b =>
                {
                    b.Property<Guid>("ID_SP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GioiThieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_SP");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("Voucher", b =>
                {
                    b.Property<Guid>("ID_VCH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_VCH");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DoAn_API.Data.ChiTietSanPham", b =>
                {
                    b.HasOne("SanPham", "SanPham")
                        .WithMany("CT_SanPhams")
                        .HasForeignKey("ID_SP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_API.Data.TheTich", "ThuTich")
                        .WithMany("CT_SanPhams")
                        .HasForeignKey("ID_ThuTich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("ThuTich");
                });

            modelBuilder.Entity("DoAn_API.Data.DiaChi", b =>
                {
                    b.HasOne("NguoiDung", "NguoiDung")
                        .WithMany("DiaChis")
                        .HasForeignKey("ID_NguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("GioHangCT", b =>
                {
                    b.HasOne("DoAn_API.Data.GioHang", "GioHang")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("ID_GioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_API.Data.ChiTietSanPham", "CTSanPham")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("ID_SPCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTSanPham");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.HasOne("DoAn_API.Data.DiaChi", "DiaChi")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_DiaChi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NguoiDung", "NguoiDung")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_NguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PhuongThucThanhToan", "ThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_ThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_VCH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn_API.Data.PhuongThucVanChuyen", "VanChuyen")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_VanChuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("NguoiDung");

                    b.Navigation("ThanhToan");

                    b.Navigation("VanChuyen");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("HoaDonChiTiet", b =>
                {
                    b.HasOne("DoAn_API.Data.ChiTietSanPham", "CTSanPham")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("ID_CTSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HoaDon", "HoaDon")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("ID_HD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.HasOne("DoAn_API.Data.TaiKhoan", "TaiKhoan")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("ID_TK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn_API.Data.ChiTietSanPham", b =>
                {
                    b.Navigation("CTHoaDons");

                    b.Navigation("GioHangCTs");
                });

            modelBuilder.Entity("DoAn_API.Data.DiaChi", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAn_API.Data.GioHang", b =>
                {
                    b.Navigation("GioHangCTs");
                });

            modelBuilder.Entity("DoAn_API.Data.PhuongThucVanChuyen", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAn_API.Data.TaiKhoan", b =>
                {
                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("DoAn_API.Data.TheTich", b =>
                {
                    b.Navigation("CT_SanPhams");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Navigation("CTHoaDons");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.Navigation("DiaChis");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PhuongThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("SanPham", b =>
                {
                    b.Navigation("CT_SanPhams");
                });

            modelBuilder.Entity("Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
